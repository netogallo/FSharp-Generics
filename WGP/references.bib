@article{SYB,
 author = {L\"{a}mmel, Ralf and Peyton Jones, Simon},
 title = {Scrap Your Boilerplate: A Practical Design Pattern for Generic Programming},
 journal = {SIGPLAN Not.},
 issue_date = {March 2003},
 volume = {38},
 number = {3},
 month = jan,
 year = {2003},
 issn = {0362-1340},
 pages = {26--37},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/640136.604179},
 doi = {10.1145/640136.604179},
 acmid = {604179},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {generic programming, rank-2 types, traversal, type cast},
} 

@inproceedings{Regular,
 author = {Noort, Thomas van and Rodriguez, Alexey and Holdermans, Stefan and Jeuring, Johan and Heeren, Bastiaan},
 title = {A Lightweight Approach to Datatype-generic Rewriting},
 booktitle = {Proceedings of the ACM SIGPLAN Workshop on Generic Programming},
 series = {WGP '08},
 year = {2008},
 isbn = {978-1-60558-060-9},
 location = {Victoria, BC, Canada},
 pages = {13--24},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1411318.1411321},
 doi = {10.1145/1411318.1411321},
 acmid = {1411321},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {datatype-generic programming, term rewriting},
}

@article{multirec,
 author = {Yakushev, Alexey Rodriguez and Holdermans, Stefan and L\"{o}h, Andres and Jeuring, Johan},
 title = {Generic Programming with Fixed Points for Mutually Recursive Datatypes},
 journal = {SIGPLAN Not.},
 issue_date = {September 2009},
 volume = {44},
 number = {9},
 month = aug,
 year = {2009},
 issn = {0362-1340},
 pages = {233--244},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1631687.1596585},
 doi = {10.1145/1631687.1596585},
 acmid = {1596585},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {datatype-generic programming, fixed points, haskell, mutually recursive datatypes},
}

@inproceedings{PolyLib,
 author = {Norell, Ulf and Jansson, Patrik},
 title = {Polytypic Programming in Haskell},
 booktitle = {Proceedings of the 15th International Conference on Implementation of Functional Languages},
 series = {IFL'03},
 year = {2004},
 isbn = {3-540-23727-5, 978-3-540-23727-3},
 location = {Edinburgh, UK},
 pages = {168--184},
 numpages = {17},
 url = {http://dx.doi.org/10.1007/978-3-540-27861-0_11},
 doi = {10.1007/978-3-540-27861-0_11},
 acmid = {2157910},
 publisher = {Springer-Verlag},
 address = {Berlin, Heidelberg},
} 

@inproceedings{GenericDeriving,
 author = {Magalh\~{a}es, Jos{\'e} Pedro and Dijkstra, Atze and Jeuring, Johan and L\"{o}h, Andres},
 title = {A Generic Deriving Mechanism for Haskell},
 booktitle = {Proceedings of the Third ACM Haskell Symposium on Haskell},
 series = {Haskell '10},
 year = {2010},
 isbn = {978-1-4503-0252-4},
 location = {Baltimore, Maryland, USA},
 pages = {37--48},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1863523.1863529},
 doi = {10.1145/1863523.1863529},
 acmid = {1863529},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {datatype-generic programming, haskell, type classes},
}

@misc{FsPickler,
  title = {{FsPickler}},
  author="Eirik Tsarpalis",
  year=2013,
  howpublished = {\url{http://nessos.github.io/ FsPickler}}
}

@misc{Nancy,
  title = {{Nancy}},
  author="Nancy Fx",
  howpublished = "\url{http://nancyfx.org}",
  notes={Recovered on May 9th, 2015}
}

@INPROCEEDINGS{TemplateHaskell,
    author = {Tim Sheard and Simon Peyton Jones},
    title = {Template Meta-programming for Haskell},
    booktitle = {In Proceedings of the ACM SIGPLAN Workshop on Haskell},
    year = {2002},
    pages = {1--16},
    publisher = {ACM}
}

@inproceedings{RepLib,
 author = {Weirich, Stephanie},
 title = {RepLib: A Library for Derivable Type Classes},
 booktitle = {Proceedings of the 2006 ACM SIGPLAN Workshop on Haskell},
 series = {Haskell '06},
 year = {2006},
 isbn = {1-59593-489-8},
 location = {Portland, Oregon, USA},
 pages = {1--12},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1159842.1159844},
 doi = {10.1145/1159842.1159844},
 acmid = {1159844},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {GADT, datatype-generic programming, representation types, type-indexed programming},
}

@inproceedings{ScalaGen,
 author = {Oliveira, Bruno C.d.S. and Gibbons, Jeremy},
 title = {Scala for Generic Programmers},
 booktitle = {Proceedings of the ACM SIGPLAN Workshop on Generic Programming},
 series = {WGP '08},
 year = {2008},
 isbn = {978-1-60558-060-9},
 location = {Victoria, BC, Canada},
 pages = {25--36},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1411318.1411323},
 doi = {10.1145/1411318.1411323},
 acmid = {1411323},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {datatype-generic programming, polytypic programming, scala},
} 

@inproceedings{polyp,
  title={PolyPâ€”a polytypic programming language extension},
  author={Jansson, Patrik and Jeuring, Johan},
  booktitle={Proceedings of the 24th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages},
  pages={470--482},
  year={1997},
  organization={ACM}
}

@article{CompGen,
 author = {Rodriguez, Alexey and Jeuring, Johan and Jansson, Patrik and Gerdes, Alex and Kiselyov, Oleg and Oliveira, Bruno C. d. S.},
 title = {Comparing Libraries for Generic Programming in Haskell},
 journal = {SIGPLAN Not.},
 issue_date = {February 2009},
 volume = {44},
 number = {2},
 month = sep,
 year = {2008},
 issn = {0362-1340},
 pages = {111--122},
 numpages = {12},
 url = {http://doi.acm.org/10.1145/1543134.1411301},
 doi = {10.1145/1543134.1411301},
 acmid = {1411301},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {datatype-generic programming, libraries comparison},
}

@article{GenLangComp,
 author = {Garcia, Ronald and Jarvi, Jaakko and Lumsdaine, Andrew and Siek, Jeremy and Willcock, Jeremiah},
 title = {An Extended Comparative Study of Language Support for Generic Programming},
 journal = {J. Funct. Program.},
 issue_date = {March 2007},
 volume = {17},
 number = {2},
 month = mar,
 year = {2007},
 issn = {0956-7968},
 pages = {145--205},
 numpages = {61},
 url = {http://dx.doi.org/10.1017/S0956796806006198},
 doi = {10.1017/S0956796806006198},
 acmid = {1230757},
 publisher = {Cambridge University Press},
 address = {New York, NY, USA},
}

@techreport{FSharp,
  author = {Syme, Don},
  title = {The F\# 3.0 Language Specification},
  institution = {Microsoft Research},
  year = {2012}
}

@TechReport {TypeProviders,
abstract     = {<p>A growing trend in both the theory and practice of programming is the
                interaction between programming and rich information spaces. From databases to
                web services to the semantic web to cloud-based data, the need to integrate
                programming with heterogeneous, connected, richly structured, streaming and
                evolving information sources is ever-increasing. Most modern applications
                incorporate one or more external information sources as integral components.
                Providing strongly typed access to these sources is a key consideration for
                strongly-typed programming languages, to insure low impedance mismatch in
                information access. At this scale, information integration strategies based on
                library design and code generation are manual, clumsy, and do not handle the
                internet-scale information sources now encountered in enterprise, web and cloud
                environments. In this report we describe the design and implementation of the
                type provider mechanism in F{\#} 3.0 and its applications to typed programming with
                web ontologies, web-services, systems management information, database mappings,
                data markets, content management systems, economic data and hosted scripting.
                Type soundness becomes relative to the soundness of the type providers and the
                schema change in information sources, but the role of types in information-rich
                programming tasks is massively expanded, especially through tooling that benefits
                from rich types in explorative programming.</p>},
author       = {Don Syme and Keith Battocchi and Kenji Takeda and Donna Malayeri and Jomo Fisher
                and Jack Hu and Tao Liu and Brian McNamara and Daniel Quirk and Matteo Taveggia
                and Wonseok Chae and Uladzimir Matsveyeu and Tomas Petricek},
month        = {September},
number       = {MSR-TR-2012-101},
publisher    = {Microsoft Research},
title        = {F{\#}3.0 - Strongly-Typed Language Support for Internet-Scale Information Sources},
url          = {http://research.microsoft.com/apps/pubs/default.aspx?id=173076},
year         = {2012},
institution  = {Microsoft Research}
}

@misc{RegularFSharp,
  author = {Rodriguez, Ernesto},
  title = {F\# - Regular gmap example},
  howpublished = "\url{https://github.com/netogallo/FSharp-Generics/blob/master/Proposal/Proposal.fs}",
  year = {2014}
}

@misc{Kwargs,
  author = {Rodriguez, Ernesto},
  title = {Kwargs - Generic command line arguments parsers},
  howpublished = "\url{https://github.com/netogallo/Kwargs}",
  year = {2014}
}

@misc{RegularDemo,
  author = {Rodriguez, Ernesto},
  title = {Regular - gmap},
  howpublished = "\url{https://github.com/netogallo/FSharp-Generics/blob/master/Proposal/src/Main.hs}"
}

@misc{InterfaceLims,
  author={Tihon, Sergey},
  title="My first disappointment of the F\# type system",
  howpublished="\url{https://sergeytihon.wordpress.com/ 2013/03/29/ my-first-disappointment-on-f-type-system/}",
  notes = {Recovered on May 9th, 2015}
}

@misc{NoKinds,
  title = {Add Higher Order Generics to F\# (Type Classes)},
  howpublished = "\url{http://visualstudio.uservoice.com/forums/121579-visual-studio/suggestions/2228766-add-higher-order-generics-to-f-type-classes}",
  notes = {Recovered on November 27th, 2014},
  author = {Visual Studio Team}
}
  
@inproceedings{Uniplate,
 author = {Mitchell, Neil and Runciman, Colin},
 title = {Uniform Boilerplate and List Processing},
 booktitle = {Proceedings of the ACM SIGPLAN Workshop on Haskell Workshop},
 series = {Haskell '07},
 year = 2007,
 isbn = {978-1-59593-674-5},
 location = {Freiburg, Germany},
 pages = {49--60},
 numpages = 12,
 url = {http://doi.acm.org/10.1145/1291201.1291208},
 doi = {10.1145/1291201.1291208},
 acmid = 1291208,
 publisher = {ACM},
 address = {New York, NY, USA},
} 


@inproceedings{DTP,
 author = {Christiansen, David Raymond},
 title = {Dependent Type Providers},
 booktitle = {Proceedings of the 9th ACM SIGPLAN Workshop on Generic Programming},
 series = {WGP '13},
 year = {2013},
 isbn = {978-1-4503-2389-5},
 location = {Boston, Massachusetts, USA},
 pages = {25--34},
 numpages = {10},
 url = {http://doi.acm.org/10.1145/2502488.2502495},
 doi = {10.1145/2502488.2502495},
 acmid = {2502495},
 publisher = {ACM},
 address = {New York, NY, USA},
 keywords = {dependent types, generic programming, metaprogramming, type providers},
} 

@incollection{GenericHaskell,
  title={Generic Haskell: Practice and Theory},
  author={Hinze, Ralf and Jeuring, Johan},
  booktitle={Generic Programming},
  pages={1--56},
  year={2003},
  publisher={Springer}
}



@inproceedings{instant2,
  title={Generic programming for indexed datatypes},
  author={Magalh{\~a}es, Jos{\'e} Pedro and Jeuring, Johan},
  booktitle={Proceedings of the seventh ACM SIGPLAN workshop on Generic programming},
  pages={37--46},
  year={2011},
  organization={ACM}
}


@article{scala-jfp,
  title = "Scala for Generic Programmers",
  author = "Bruno C. d. S. Oliveira and Jeremy Gibbons",
  year = "2010",
  journal = "Journal of Functional Programming",
  note = "Revised version of the WGP2008 paper",
  number = "3,4",
  pages = "303-352",
  url = "http://www.comlab.ox.ac.uk/ jeremy.gibbons/ publications/ scalagp-jfp.pdf",
  volume = "20",
  doi = "10.1017/S0956796810000171",
}

@INPROCEEDINGS{Wadler89theoremsfor,
    author = {Philip Wadler},
    title = {Theorems for free!},
    booktitle = {FUNCTIONAL PROGRAMMING LANGUAGES AND COMPUTER ARCHITECTURE},
    year = {1989},
    pages = {347--359},
    publisher = {ACM Press}
}

@INPROCEEDINGS{Sheard02templatemeta-programming,
    author = {Tim Sheard and Simon Peyton Jones},
    title = {Template Meta-programming for Haskell},
    booktitle = {In Proceedings of the ACM SIGPLAN Workshop on Haskell},
    year = {2002},
    pages = {1--16},
    publisher = {ACM}
}

@TechReport {export:173076,
abstract     = {<p>A growing trend in both the theory and practice of programming is the
                interaction between programming and rich information spaces. From databases to
                web services to the semantic web to cloud-based data, the need to integrate
                programming with heterogeneous, connected, richly structured, streaming and
                evolving information sources is ever-increasing. Most modern applications
                incorporate one or more external information sources as integral components.
                Providing strongly typed access to these sources is a key consideration for
                strongly-typed programming languages, to insure low impedance mismatch in
                information access. At this scale, information integration strategies based on
                library design and code generation are manual, clumsy, and do not handle the
                internet-scale information sources now encountered in enterprise, web and cloud
                environments. In this report we describe the design and implementation of the
                type provider mechanism in F{\#} 3.0 and its applications to typed programming with
                web ontologies, web-services, systems management information, database mappings,
                data markets, content management systems, economic data and hosted scripting.
                Type soundness becomes relative to the soundness of the type providers and the
                schema change in information sources, but the role of types in information-rich
                programming tasks is massively expanded, especially through tooling that benefits
                from rich types in explorative programming.</p>},
author       = {Don Syme and Keith Battocchi and Kenji Takeda and Donna Malayeri and Jomo Fisher
                and Jack Hu and Tao Liu and Brian McNamara and Daniel Quirk and Matteo Taveggia
                and Wonseok Chae and Uladzimir Matsveyeu and Tomas Petricek},
month        = {September},
number       = {MSR-TR-2012-101},
publisher    = {Microsoft Research},
title        = {F{\#}3.0 - Strongly-Typed Language Support for Internet-Scale Information Sources},
url          = {http://research.microsoft.com/ apps/ pubs/ default.aspx?id=173076},
year         = {2012},
}

@Inproceedings {export:147193,
abstract     = {<p>Language-integrated meta-programming and extensible compilation have been
                recurring themes of programming languages since the invention of LISP. A recent
                real-world application of these techniques is the use of small meta-programs to
                specify database queries, as used in the Microsoft LINQ extensions for .NET. It
                is important that .NET languages such as F{\#} are able to leverage the
                functionality provided by LINQ and related components for heterogeneous
                execution, both for pragmatic reasons and as a first step toward applying more
                disciplined, formal approaches to these problems. This paper explores the use of
                a modest meta-programming extension to F{\#} to access and leverage the
                functionality of LINQ and other components. We do this by demonstrating an
                implementation of language integrated SQL queries using the LINQ/SQLMetal
                libraries. We also sketch two other applications: the execution of data-parallel
                quoted F{\#} programs on a GPU via the Accelerator libraries, and dynamic
                native-code compilation via LINQ.</p>},
author       = {Donald Syme},
booktitle    = {Proceedings of the 2006 workshop on ML},
journal      = {Proceedings of the 2006 workshop on ML},
publisher    = {ACM},
title        = {Leveraging .NET meta-programming components from F{\#}: integrated queries and
                interoperable heterogeneous execution},
url          = {http://research.microsoft.com/ apps/ pubs/ default.aspx? id=147193},
year         = {2006},
}

@Book {export:192596,
abstract     = {<p>Expert F{\#} 3.0 is about practical programming in a beautiful language that puts
                the power and elegance of data-rich functional programming into the hands of
                professional developers and analytical programmers. Through simplicity and
                interoperability, F{\#} achieves unrivalled levels of programmer productivity,
                application performance and program clarity</p>},
author       = {Don Syme and Adam Granicz and Antonio Cisternino},
month        = {November},
publisher    = {Apress},
title        = {Expert F{\#} 3.0},
url          = {http://research.microsoft.com/ apps/ pubs/ default.aspx?id=192596},
year         = {2012},
}

@INPROCEEDINGS{Cheney02alightweight,
    author = {James Cheney and Ralf Hinze},
    title = {A Lightweight Implementation of Generics and Dynamics},
    booktitle = {Proceedings of the 2002 ACM SIGPLAN Haskell Workshop},
    year = {2002},
    pages = {90--104},
    publisher = {ACM Press}
}